autoload -Uz compinit && compinit

# The following lines were added by compinstall
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' expand prefix suffix
zstyle ':completion:*' file-sort name
zstyle ':completion:*' format '%B%F{green}-- %d --%f%b'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' ignore-parents parent
zstyle ':completion:*' insert-unambiguous false
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' list-suffixes true
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}' 'r:|[._-]=** r:|=**' 'l:|=* r:|=*'
zstyle ':completion:*' menu select=long-list select=0
zstyle ':completion:*' original true
zstyle ':completion:*' preserve-prefix '//[^/]##/'
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' verbose true
zstyle :compinstall filename '/home/liu/.zshrc'

# End of lines added by compinstall
# Lines configured by zsh-newuser-install
setopt HIST_IGNORE_SPACE
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt nomatch
unsetopt beep
bindkey -v
setopt appendhistory
bindkey '^z' push-line-or-edit
bindkey '^R' history-incremental-search-backward

#### START OF CONDA INIT
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/liu/.local/lib/mambaforge/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/liu/.local/lib/mambaforge/etc/profile.d/conda.sh" ]; then
        . "/home/liu/.local/lib/mambaforge/etc/profile.d/conda.sh"
    else
        export PATH="/home/liu/.local/lib/mambaforge/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/home/liu/.local/lib/mambaforge/etc/profile.d/mamba.sh" ]; then
    . "/home/liu/.local/lib/mambaforge/etc/profile.d/mamba.sh"
fi
#### END OF CONDA INIT

# Global config location
CONFIG_PATH="/home/liu/.config/zsh"

# Autodetect the emulator
export EMULATOR=$(ps -o comm= -p "$(($(ps -o ppid= -p "$(($(ps -o sid= -p "$$")))")))")

# Theme
source "$CONFIG_PATH/themes/polyglot/polyglot.sh"

# Install aliases
for file in $CONFIG_PATH/aliases/*(.); source $file

# Load plugins
# complete -o nospace -C /usr/local/bin/bit bit
source "$CONFIG_PATH/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
source "$CONFIG_PATH/plugins/zsh-async/async.zsh"
if [[ -f "/etc/profile.d/autojump.sh" ]]; then
    [[ -s /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh
else
    [[ -s "$HOME/.autojump/etc/profile.d/autojump.sh" ]] && source "$HOME/.autojump/etc/profile.d/autojump.sh"
fi
source "$CONFIG_PATH/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
source "$CONFIG_PATH/plugins/zsh-sudo/sudo.plugin.zsh"
source "$CONFIG_PATH/plugins/conda-zsh-completion/conda-zsh-completion.plugin.zsh"
source "$CONFIG_PATH/plugins/flatpak-zsh-completion/flatpak.plugin.zsh"
fpath=($CONFIG_PATH/plugins/zsh-cht/ $fpath)
source /usr/share/autojump/autojump.sh
autoload -Uz compinit && compinit

if ( command -v pipx &> /dev/null ); then
	autoload -U bashcompinit
	bashcompinit
	eval "$(register-python-argcomplete pipx)"
fi

if (command -v neofetch &> /dev/null); then neofetch; fi

